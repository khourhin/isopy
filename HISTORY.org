#+OPTIONS: toc:nil num:nil author:nil todo:nil
#+EXCLUDE_TAGS: noexport

* TODO Implement cryptic exons                                     :noexport:

See in notebooks.

idea: 

Alternative exons are defined by overlap (1 base overlap is sufficient I
think). Considering same start or end is not a condition non-sufficient ( (ie
exons can overlap but have no common start nor end))

The main exon is the one most supported by reads. The alternative one are
names "altvX" with X refering to their place in alternative exons order by read support.

* Next                                                             :noexport:

- Verify how this is working and what would change with a gene on the - strand !!!

- Deal with cryptic exons (especially at the time of naming exons in isopy.export_to_bed) 


- CORNERCASE: Adding chromsize to be sure to be in the bounderies of
  chromosomes when checking splicing sites

* TODO Biblio                                                      :noexport:
  SCHEDULED: <2019-08-01 Thu>

- See with EA:
  Implement criteria to further selected exons like in https://www.biorxiv.org/content/early/2018/02/05/260562.full.pdf
  - Looking for inserts in read mapping against transcriptome
  - Candidate exons from the mapping to genome should be 6nt away from known exon
  - Quantification by alignment to pseudo-transcriptome (downweight for multimappers), TMM norm.

* History
** DONE 0.2.0 Implement exon identification [3/3]
   CLOSED: [2019-07-19 Fri 16:50] SCHEDULED: <2019-07-19 Fri>

<2019-07-19 Fri>

   - [X] Prepare test dataset
    
     > Using GPHN gene and previously described 40 exons

   - [X] From multiple alignments of long reads against a genome, extract a list of putative exons as dataframe.

   - [X] Export exons to bed and fasta files

